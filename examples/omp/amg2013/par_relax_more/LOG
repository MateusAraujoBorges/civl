civl show  -showProgram -userIncludePath=.:../AMG2013:../AMG2013/IJ_mv:../AMG2013/krylov:../AMG2013/parcsr_ls:../AMG2013/parcsr_mv:../AMG2013/seq_mv:../AMG2013/sstruct_mv:../AMG2013/struct_mv:../AMG2013/test:../AMG2013/utilities: -DHYPRE_SEQUENTIAL -DHYPRE_USING_OPENMP main.c ../AMG2013/parcsr_ls/par_relax_more.c hypre_memory.c
CIVL v1.7.2+ of 2016-10-05 -- http://vsl.cis.udel.edu/civl
Found independent OpenMP for Node[-1, 0, par_relax_more.c:634.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=mult, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 25936, par_relax_more.c:639.12-20 "u_data[j]"]]
  readArrays : [Node[-1, 25940, par_relax_more.c:639.31-39 "r_data[j]"], Node[-1, 25944, par_relax_more.c:639.43-51 "v_data[j]"]]
Checking Array Refs for:
  Node[-1, 25962, par_relax_more.c:649.9-14 "u_data"][Node[-1, 25963, par_relax_more.c:649.16 "i"]]
  Node[-1, 25968, par_relax_more.c:649.33-38 "u_data"][Node[-1, 25969, par_relax_more.c:649.40 "i"]]
with bounding conditions:[Node[-1, 44715, par_relax_more.c:645.1-0 "pragma omp parallel for private ... \n"], Node[-1, 25959, par_relax_more.c:647.19-30 "i < num_rows"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:645.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 25964, par_relax_more.c:649.9-17 "u_data[i]"]]
  readArrays : [Node[-1, 25967, par_relax_more.c:649.21-29 "orig_u[i]"], Node[-1, 25970, par_relax_more.c:649.33-41 "u_data[i]"]]
Checking Array Refs for:
  Node[-1, 26058, par_relax_more.c:683.9-15 "ds_data"][Node[-1, 26059, par_relax_more.c:683.17 "j"]]
  Node[-1, 26072, par_relax_more.c:685.21-27 "ds_data"][Node[-1, 26073, par_relax_more.c:685.29 "j"]]
with bounding conditions:[Node[-1, 44719, par_relax_more.c:678.1-0 "pragma omp parallel for private ... \n"], Node[-1, 26047, par_relax_more.c:680.18-29 "j < num_rows"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:678.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : [Entity[kind=FUNCTION, name=sqrt, linkage=EXTERNAL, type=201, definition=-1]]
  writeArrays : [Node[-1, 26071, par_relax_more.c:685.9-17 "r_data[j]"], Node[-1, 26060, par_relax_more.c:683.9-18 "ds_data[j]"]]
  readArrays : [Node[-1, 26077, par_relax_more.c:685.34-42 "f_data[j]"], Node[-1, 26055, par_relax_more.c:682.16-39 "A_diag_data[A_diag_i[j]]"], Node[-1, 26074, par_relax_more.c:685.21-30 "ds_data[j]"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:690.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 26104, par_relax_more.c:694.9-17 "r_data[j]"]]
  readArrays : [Node[-1, 26107, par_relax_more.c:694.22-31 "ds_data[j]"], Node[-1, 26110, par_relax_more.c:694.35-45 "tmp_data[j]"]]
Checking Array Refs for:
  Node[-1, 26134, par_relax_more.c:707.9-14 "u_data"][Node[-1, 26135, par_relax_more.c:707.16 "j"]]
  Node[-1, 26129, par_relax_more.c:705.21-26 "u_data"][Node[-1, 26130, par_relax_more.c:705.28 "j"]]
with bounding conditions:[Node[-1, 44727, par_relax_more.c:701.1-0 "pragma omp parallel for private ... \n"], Node[-1, 26123, par_relax_more.c:703.19-30 "j < num_rows"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:701.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 26128, par_relax_more.c:705.9-17 "orig_u[j]"], Node[-1, 26136, par_relax_more.c:707.9-17 "u_data[j]"]]
  readArrays : [Node[-1, 26139, par_relax_more.c:707.21-29 "r_data[j]"], Node[-1, 26131, par_relax_more.c:705.21-29 "u_data[j]"], Node[-1, 26142, par_relax_more.c:707.33-50 "coefs[cheby_order]"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:715.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 26168, par_relax_more.c:719.12-22 "tmp_data[j]"]]
  readArrays : [Node[-1, 26171, par_relax_more.c:719.28-37 "ds_data[j]"], Node[-1, 26174, par_relax_more.c:719.41-49 "u_data[j]"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:727.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=mult, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 26217, par_relax_more.c:732.12-20 "u_data[j]"]]
  readArrays : [Node[-1, 26211, par_relax_more.c:731.32-40 "v_data[j]"], Node[-1, 26208, par_relax_more.c:731.20-29 "ds_data[j]"], Node[-1, 26221, par_relax_more.c:732.31-39 "r_data[j]"]]
Checking Array Refs for:
  Node[-1, 26241, par_relax_more.c:746.9-14 "u_data"][Node[-1, 26242, par_relax_more.c:746.16 "j"]]
  Node[-1, 26250, par_relax_more.c:746.44-49 "u_data"][Node[-1, 26251, par_relax_more.c:746.51 "j"]]
with bounding conditions:[Node[-1, 44739, par_relax_more.c:742.1-0 "pragma omp parallel for private ... \n"], Node[-1, 26238, par_relax_more.c:744.19-30 "j < num_rows"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:742.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 26243, par_relax_more.c:746.9-17 "u_data[j]"]]
  readArrays : [Node[-1, 26249, par_relax_more.c:746.33-42 "ds_data[j]"], Node[-1, 26246, par_relax_more.c:746.21-29 "orig_u[j]"], Node[-1, 26252, par_relax_more.c:746.44-52 "u_data[j]"]]
Checking Array Refs for:
  Node[-1, 24824, par_relax_more.c:260.13-18 "p_data"][Node[-1, 24825, par_relax_more.c:260.20 "j"]]
  Node[-1, 24831, par_relax_more.c:260.42-47 "p_data"][Node[-1, 24832, par_relax_more.c:260.49 "j"]]
with bounding conditions:[Node[-1, 44743, par_relax_more.c:256.1-0 "pragma omp parallel for private ... \n"], Node[-1, 24821, par_relax_more.c:258.20-33 "j < local_size"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:256.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=beta, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 24826, par_relax_more.c:260.13-21 "p_data[j]"]]
  readArrays : [Node[-1, 24833, par_relax_more.c:260.42-50 "p_data[j]"], Node[-1, 24829, par_relax_more.c:260.25-33 "s_data[j]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1980]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 29577, par_relax_more.c:1982.7-17 "tmp_data[i]"]]
  readArrays : [Node[-1, 29580, par_relax_more.c:1982.21-29 "u_data[i]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1984]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=zero, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=n, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=num_threads, linkage=NONE, type=0, definition=-1]]
  writeArrays : [Node[-1, 29761, par_relax_more.c:2024.15-23 "u_data[i]"], Node[-1, 29879, par_relax_more.c:2052.15-23 "u_data[i]"]]
  readArrays : [Node[-1, 29765, par_relax_more.c:2024.34-44 "l1_norms[i]"], Node[-1, 29862, par_relax_more.c:2049.23-34 "A_offd_j[jj]"], Node[-1, 29793, par_relax_more.c:2036.21-29 "f_data[i]"], Node[-1, 29799, par_relax_more.c:2037.25-35 "A_diag_i[i]"], Node[-1, 29855, par_relax_more.c:2047.43-55 "A_offd_i[i+1]"], Node[-1, 29737, par_relax_more.c:2019.43-55 "A_offd_i[i+1]"], Node[-1, 29681, par_relax_more.c:2009.25-35 "A_diag_i[i]"], Node[-1, 29812, par_relax_more.c:2039.23-34 "A_diag_j[jj]"], Node[-1, 29787, par_relax_more.c:2034.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 29849, par_relax_more.c:2047.25-35 "A_offd_i[i]"], Node[-1, 29669, par_relax_more.c:2006.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 29744, par_relax_more.c:2021.23-34 "A_offd_j[jj]"], Node[-1, 29805, par_relax_more.c:2037.43-55 "A_diag_i[i+1]"], Node[-1, 29731, par_relax_more.c:2019.25-35 "A_offd_i[i]"], Node[-1, 29883, par_relax_more.c:2052.34-44 "l1_norms[i]"], Node[-1, 29694, par_relax_more.c:2011.23-34 "A_diag_j[jj]"], Node[-1, 29687, par_relax_more.c:2009.43-55 "A_diag_i[i+1]"], Node[-1, 29675, par_relax_more.c:2008.21-29 "f_data[i]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2064]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 29919, par_relax_more.c:2067.2-12 "tmp_data[i]"]]
  readArrays : [Node[-1, 29922, par_relax_more.c:2067.16-24 "u_data[i]"]]
Checking Array Refs for:
  Node[-1, 30276, par_relax_more.c:2145.15-20 "u_data"][Node[-1, 30277, par_relax_more.c:2145.22 "i"]]
  Node[-1, 30078, par_relax_more.c:2104.68-73 "u_data"][Node[-1, 30079, par_relax_more.c:2104.75-76 "ii"]]
with bounding conditions:[Node[-1, 44759, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2070], Node[-1, 29942, par_relax_more.c:2071.18-32 "j < num_threads"]]
Found dependent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2070]
  writeVars : [Entity[kind=VARIABLE, name=res2, linkage=NONE, type=8, definition=-1]]
  readVars : [Entity[kind=VARIABLE, name=res2, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=zero, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=c2, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=n, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=num_threads, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=c1, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 30278, par_relax_more.c:2145.15-23 "u_data[i]"], Node[-1, 30026, par_relax_more.c:2096.15-27 "Vtemp_data[i]"], Node[-1, 30133, par_relax_more.c:2114.15-23 "u_data[i]"]]
  readArrays : [Node[-1, 30080, par_relax_more.c:2104.68-77 "u_data[ii]"], Node[-1, 30174, par_relax_more.c:2127.21-29 "f_data[i]"], Node[-1, 30035, par_relax_more.c:2097.25-35 "A_diag_i[i]"], Node[-1, 30048, par_relax_more.c:2099.23-34 "A_diag_j[jj]"], Node[-1, 30103, par_relax_more.c:2109.25-35 "A_offd_i[i]"], Node[-1, 30029, par_relax_more.c:2096.31-39 "u_data[i]"], Node[-1, 30225, par_relax_more.c:2135.68-77 "u_data[ii]"], Node[-1, 30261, par_relax_more.c:2142.23-34 "A_offd_j[jj]"], Node[-1, 30077, par_relax_more.c:2104.51-64 "Vtemp_data[ii]"], Node[-1, 30254, par_relax_more.c:2140.43-55 "A_offd_i[i+1]"], Node[-1, 30041, par_relax_more.c:2097.43-55 "A_diag_i[i+1]"], Node[-1, 30021, par_relax_more.c:2095.21-29 "f_data[i]"], Node[-1, 30074, par_relax_more.c:2104.32-46 "A_diag_data[jj]"], Node[-1, 30012, par_relax_more.c:2092.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 30116, par_relax_more.c:2111.23-34 "A_offd_j[jj]"], Node[-1, 30186, par_relax_more.c:2128.43-55 "A_diag_i[i+1]"], Node[-1, 30219, par_relax_more.c:2135.32-46 "A_diag_data[jj]"], Node[-1, 30222, par_relax_more.c:2135.51-64 "Vtemp_data[ii]"], Node[-1, 30165, par_relax_more.c:2124.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 30193, par_relax_more.c:2130.23-34 "A_diag_j[jj]"], Node[-1, 30288, par_relax_more.c:2145.49-59 "l1_norms[i]"], Node[-1, 30180, par_relax_more.c:2128.25-35 "A_diag_i[i]"], Node[-1, 30143, par_relax_more.c:2114.49-59 "l1_norms[i]"], Node[-1, 30109, par_relax_more.c:2109.43-55 "A_offd_i[i+1]"], Node[-1, 30248, par_relax_more.c:2140.25-35 "A_offd_i[i]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2478]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 31372, par_relax_more.c:2481.7-19 "Vtemp_data[i]"]]
  readArrays : [Node[-1, 31375, par_relax_more.c:2481.23-31 "u_data[i]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2497]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=zero, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=relax_weight, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 31492, par_relax_more.c:2517.13-21 "u_data[i]"]]
  readArrays : [Node[-1, 31431, par_relax_more.c:2507.23-33 "A_diag_i[i]"], Node[-1, 31475, par_relax_more.c:2514.21-32 "A_offd_j[jj]"], Node[-1, 31462, par_relax_more.c:2512.23-33 "A_offd_i[i]"], Node[-1, 31437, par_relax_more.c:2507.41-53 "A_diag_i[i+1]"], Node[-1, 31425, par_relax_more.c:2506.19-27 "f_data[i]"], Node[-1, 31419, par_relax_more.c:2504.14-37 "A_diag_data[A_diag_i[i]]"], Node[-1, 31444, par_relax_more.c:2509.21-32 "A_diag_j[jj]"], Node[-1, 31498, par_relax_more.c:2517.45-55 "l1_norms[i]"], Node[-1, 31468, par_relax_more.c:2512.41-53 "A_offd_i[i+1]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2528]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=zero, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=relax_points, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=relax_weight, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 31603, par_relax_more.c:2551.13-21 "u_data[i]"]]
  readArrays : [Node[-1, 31536, par_relax_more.c:2540.19-27 "f_data[i]"], Node[-1, 31555, par_relax_more.c:2543.21-32 "A_diag_j[jj]"], Node[-1, 31542, par_relax_more.c:2541.23-33 "A_diag_i[i]"], Node[-1, 31579, par_relax_more.c:2546.41-53 "A_offd_i[i+1]"], Node[-1, 31586, par_relax_more.c:2548.21-32 "A_offd_j[jj]"], Node[-1, 31529, par_relax_more.c:2538.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 31609, par_relax_more.c:2551.47-57 "l1_norms[i]"], Node[-1, 31548, par_relax_more.c:2541.41-53 "A_diag_i[i+1]"], Node[-1, 31522, par_relax_more.c:2537.14-25 "cf_marker[i]"], Node[-1, 31573, par_relax_more.c:2546.23-33 "A_offd_i[i]"]]
Checking Array Refs for:
  Node[-1, 25187, par_relax_more.c:410.6-7 "dk"][Node[-1, 25188, par_relax_more.c:410.9 "i"]]
  Node[-1, 25200, par_relax_more.c:411.19-20 "dk"][Node[-1, 25201, par_relax_more.c:411.22 "i"]]
with bounding conditions:[Node[-1, 44773, par_relax_more.c:403.1-0 "pragma omp parallel for private ... \n"], Node[-1, 25170, par_relax_more.c:405.15-26 "i < num_rows"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:403.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=temp1, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 25189, par_relax_more.c:410.6-10 "dk[i]"], Node[-1, 25199, par_relax_more.c:411.6-14 "u_data[i]"]]
  readArrays : [Node[-1, 25178, par_relax_more.c:407.13-36 "A_diag_data[A_diag_i[i]]"], Node[-1, 25202, par_relax_more.c:411.19-23 "dk[i]"], Node[-1, 25193, par_relax_more.c:410.20-28 "v_data[i]"]]
Checking Array Refs for:
  Node[-1, 25277, par_relax_more.c:433.9-10 "dk"][Node[-1, 25278, par_relax_more.c:433.12 "i"]]
  Node[-1, 25281, par_relax_more.c:433.23-24 "dk"][Node[-1, 25282, par_relax_more.c:433.26 "i"]]
with bounding conditions:[Node[-1, 44777, par_relax_more.c:426.1-0 "pragma omp parallel for private ... \n"], Node[-1, 25260, par_relax_more.c:428.18-29 "i < num_rows"]]
Checking Array Refs for:
  Node[-1, 25277, par_relax_more.c:433.9-10 "dk"][Node[-1, 25278, par_relax_more.c:433.12 "i"]]
  Node[-1, 25296, par_relax_more.c:434.22-23 "dk"][Node[-1, 25297, par_relax_more.c:434.25 "i"]]
with bounding conditions:[Node[-1, 44777, par_relax_more.c:426.1-0 "pragma omp parallel for private ... \n"], Node[-1, 25260, par_relax_more.c:428.18-29 "i < num_rows"]]
Found independent OpenMP for Node[-1, 0, par_relax_more.c:426.1-0 "pragma omp parallel for private ... \n"]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=temp2, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=temp1, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 25295, par_relax_more.c:434.9-17 "u_data[i]"], Node[-1, 25279, par_relax_more.c:433.9-13 "dk[i]"]]
  readArrays : [Node[-1, 25268, par_relax_more.c:430.16-39 "A_diag_data[A_diag_i[i]]"], Node[-1, 25283, par_relax_more.c:433.23-27 "dk[i]"], Node[-1, 25288, par_relax_more.c:433.37-45 "v_data[i]"], Node[-1, 25298, par_relax_more.c:434.22-26 "dk[i]"]]
Checking Array Refs for:
  Node[-1, 29218, par_relax_more.c:1854.12-18 "l1_norm"][Node[-1, 29219, par_relax_more.c:1854.20 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29218, par_relax_more.c:1854.12-18 "l1_norm"][Node[-1, 29219, par_relax_more.c:1854.20 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29218, par_relax_more.c:1854.12-18 "l1_norm"][Node[-1, 29219, par_relax_more.c:1854.20 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28517, par_relax_more.c:1704.12-18 "l1_norm"][Node[-1, 28518, par_relax_more.c:1704.20 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28517, par_relax_more.c:1704.12-18 "l1_norm"][Node[-1, 28518, par_relax_more.c:1704.20 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28517, par_relax_more.c:1704.12-18 "l1_norm"][Node[-1, 28518, par_relax_more.c:1704.20 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28869, par_relax_more.c:1780.12-18 "l1_norm"][Node[-1, 28870, par_relax_more.c:1780.20 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28869, par_relax_more.c:1780.12-18 "l1_norm"][Node[-1, 28870, par_relax_more.c:1780.20 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28869, par_relax_more.c:1780.12-18 "l1_norm"][Node[-1, 28870, par_relax_more.c:1780.20 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28608, par_relax_more.c:1723.21-27 "l1_norm"][Node[-1, 28609, par_relax_more.c:1723.29 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28608, par_relax_more.c:1723.21-27 "l1_norm"][Node[-1, 28609, par_relax_more.c:1723.29 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28608, par_relax_more.c:1723.21-27 "l1_norm"][Node[-1, 28609, par_relax_more.c:1723.29 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28643, par_relax_more.c:1729.24-30 "l1_norm"][Node[-1, 28644, par_relax_more.c:1729.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28643, par_relax_more.c:1729.24-30 "l1_norm"][Node[-1, 28644, par_relax_more.c:1729.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28643, par_relax_more.c:1729.24-30 "l1_norm"][Node[-1, 28644, par_relax_more.c:1729.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28941, par_relax_more.c:1792.12-18 "l1_norm"][Node[-1, 28942, par_relax_more.c:1792.20 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28941, par_relax_more.c:1792.12-18 "l1_norm"][Node[-1, 28942, par_relax_more.c:1792.20 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28941, par_relax_more.c:1792.12-18 "l1_norm"][Node[-1, 28942, par_relax_more.c:1792.20 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28566, par_relax_more.c:1714.21-27 "l1_norm"][Node[-1, 28567, par_relax_more.c:1714.29 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28566, par_relax_more.c:1714.21-27 "l1_norm"][Node[-1, 28567, par_relax_more.c:1714.29 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28566, par_relax_more.c:1714.21-27 "l1_norm"][Node[-1, 28567, par_relax_more.c:1714.29 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29038, par_relax_more.c:1814.21-27 "l1_norm"][Node[-1, 29039, par_relax_more.c:1814.29 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29038, par_relax_more.c:1814.21-27 "l1_norm"][Node[-1, 29039, par_relax_more.c:1814.29 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29038, par_relax_more.c:1814.21-27 "l1_norm"][Node[-1, 29039, par_relax_more.c:1814.29 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29006, par_relax_more.c:1807.24-30 "l1_norm"][Node[-1, 29007, par_relax_more.c:1807.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29006, par_relax_more.c:1807.24-30 "l1_norm"][Node[-1, 29007, par_relax_more.c:1807.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29006, par_relax_more.c:1807.24-30 "l1_norm"][Node[-1, 29007, par_relax_more.c:1807.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28713, par_relax_more.c:1746.21-27 "l1_norm"][Node[-1, 28714, par_relax_more.c:1746.29 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28713, par_relax_more.c:1746.21-27 "l1_norm"][Node[-1, 28714, par_relax_more.c:1746.29 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28713, par_relax_more.c:1746.21-27 "l1_norm"][Node[-1, 28714, par_relax_more.c:1746.29 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29164, par_relax_more.c:1841.24-30 "l1_norm"][Node[-1, 29165, par_relax_more.c:1841.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29164, par_relax_more.c:1841.24-30 "l1_norm"][Node[-1, 29165, par_relax_more.c:1841.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29164, par_relax_more.c:1841.24-30 "l1_norm"][Node[-1, 29165, par_relax_more.c:1841.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28674, par_relax_more.c:1738.12-18 "l1_norm"][Node[-1, 28675, par_relax_more.c:1738.20 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28674, par_relax_more.c:1738.12-18 "l1_norm"][Node[-1, 28675, par_relax_more.c:1738.20 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28674, par_relax_more.c:1738.12-18 "l1_norm"][Node[-1, 28675, par_relax_more.c:1738.20 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29190, par_relax_more.c:1847.15-21 "l1_norm"][Node[-1, 29191, par_relax_more.c:1847.23 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29190, par_relax_more.c:1847.15-21 "l1_norm"][Node[-1, 29191, par_relax_more.c:1847.23 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29190, par_relax_more.c:1847.15-21 "l1_norm"][Node[-1, 29191, par_relax_more.c:1847.23 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28539, par_relax_more.c:1709.18-24 "l1_norm"][Node[-1, 28540, par_relax_more.c:1709.26 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28539, par_relax_more.c:1709.18-24 "l1_norm"][Node[-1, 28540, par_relax_more.c:1709.26 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28539, par_relax_more.c:1709.18-24 "l1_norm"][Node[-1, 28540, par_relax_more.c:1709.26 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28993, par_relax_more.c:1804.24-30 "l1_norm"][Node[-1, 28994, par_relax_more.c:1804.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28993, par_relax_more.c:1804.24-30 "l1_norm"][Node[-1, 28994, par_relax_more.c:1804.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28993, par_relax_more.c:1804.24-30 "l1_norm"][Node[-1, 28994, par_relax_more.c:1804.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28742, par_relax_more.c:1752.21-27 "l1_norm"][Node[-1, 28743, par_relax_more.c:1752.29 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28742, par_relax_more.c:1752.21-27 "l1_norm"][Node[-1, 28743, par_relax_more.c:1752.29 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28742, par_relax_more.c:1752.21-27 "l1_norm"][Node[-1, 28743, par_relax_more.c:1752.29 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28914, par_relax_more.c:1785.18-24 "l1_norm"][Node[-1, 28915, par_relax_more.c:1785.26 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28914, par_relax_more.c:1785.18-24 "l1_norm"][Node[-1, 28915, par_relax_more.c:1785.26 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28914, par_relax_more.c:1785.18-24 "l1_norm"][Node[-1, 28915, par_relax_more.c:1785.26 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28802, par_relax_more.c:1764.21-27 "l1_norm"][Node[-1, 28803, par_relax_more.c:1764.29 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28802, par_relax_more.c:1764.21-27 "l1_norm"][Node[-1, 28803, par_relax_more.c:1764.29 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28802, par_relax_more.c:1764.21-27 "l1_norm"][Node[-1, 28803, par_relax_more.c:1764.29 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28838, par_relax_more.c:1771.24-30 "l1_norm"][Node[-1, 28839, par_relax_more.c:1771.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28838, par_relax_more.c:1771.24-30 "l1_norm"][Node[-1, 28839, par_relax_more.c:1771.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28838, par_relax_more.c:1771.24-30 "l1_norm"][Node[-1, 28839, par_relax_more.c:1771.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28887, par_relax_more.c:1782.15-21 "l1_norm"][Node[-1, 28888, par_relax_more.c:1782.23 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28887, par_relax_more.c:1782.15-21 "l1_norm"][Node[-1, 28888, par_relax_more.c:1782.23 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 28887, par_relax_more.c:1782.15-21 "l1_norm"][Node[-1, 28888, par_relax_more.c:1782.23 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29112, par_relax_more.c:1830.24-30 "l1_norm"][Node[-1, 29113, par_relax_more.c:1830.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29112, par_relax_more.c:1830.24-30 "l1_norm"][Node[-1, 29113, par_relax_more.c:1830.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29112, par_relax_more.c:1830.24-30 "l1_norm"][Node[-1, 29113, par_relax_more.c:1830.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29125, par_relax_more.c:1833.24-30 "l1_norm"][Node[-1, 29126, par_relax_more.c:1833.32 "i"]]
  Node[-1, 29183, par_relax_more.c:1846.16-22 "l1_norm"][Node[-1, 29184, par_relax_more.c:1846.24 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29125, par_relax_more.c:1833.24-30 "l1_norm"][Node[-1, 29126, par_relax_more.c:1833.32 "i"]]
  Node[-1, 29238, par_relax_more.c:1857.18-24 "l1_norm"][Node[-1, 29239, par_relax_more.c:1857.26 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Checking Array Refs for:
  Node[-1, 29125, par_relax_more.c:1833.24-30 "l1_norm"][Node[-1, 29126, par_relax_more.c:1833.32 "i"]]
  Node[-1, 29221, par_relax_more.c:1854.26-32 "l1_norm"][Node[-1, 29222, par_relax_more.c:1854.34 "i"]]
with bounding conditions:[Node[-1, 44781, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685], Node[-1, 28449, par_relax_more.c:1686.18-32 "k < num_threads"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:1685]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=cf_marker, linkage=NONE, type=132, definition=-1], Entity[kind=VARIABLE, name=num_threads, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=option, linkage=NONE, type=0, definition=-1], Entity[kind=FUNCTION, name=fabs, linkage=EXTERNAL, type=201, definition=-1], Entity[kind=VARIABLE, name=num_rows, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=num_cols_offd, linkage=NONE, type=0, definition=-1]]
  writeArrays : [Node[-1, 29220, par_relax_more.c:1854.12-21 "l1_norm[i]"], Node[-1, 28519, par_relax_more.c:1704.12-21 "l1_norm[i]"], Node[-1, 28871, par_relax_more.c:1780.12-21 "l1_norm[i]"], Node[-1, 28610, par_relax_more.c:1723.21-30 "l1_norm[i]"], Node[-1, 28645, par_relax_more.c:1729.24-33 "l1_norm[i]"], Node[-1, 28943, par_relax_more.c:1792.12-21 "l1_norm[i]"], Node[-1, 28568, par_relax_more.c:1714.21-30 "l1_norm[i]"], Node[-1, 29040, par_relax_more.c:1814.21-30 "l1_norm[i]"], Node[-1, 29008, par_relax_more.c:1807.24-33 "l1_norm[i]"], Node[-1, 28715, par_relax_more.c:1746.21-30 "l1_norm[i]"], Node[-1, 29166, par_relax_more.c:1841.24-33 "l1_norm[i]"], Node[-1, 28676, par_relax_more.c:1738.12-21 "l1_norm[i]"], Node[-1, 29192, par_relax_more.c:1847.15-24 "l1_norm[i]"], Node[-1, 28541, par_relax_more.c:1709.18-27 "l1_norm[i]"], Node[-1, 28995, par_relax_more.c:1804.24-33 "l1_norm[i]"], Node[-1, 28744, par_relax_more.c:1752.21-30 "l1_norm[i]"], Node[-1, 28916, par_relax_more.c:1785.18-27 "l1_norm[i]"], Node[-1, 28804, par_relax_more.c:1764.21-30 "l1_norm[i]"], Node[-1, 28840, par_relax_more.c:1771.24-33 "l1_norm[i]"], Node[-1, 28889, par_relax_more.c:1782.15-24 "l1_norm[i]"], Node[-1, 29114, par_relax_more.c:1830.24-33 "l1_norm[i]"], Node[-1, 29127, par_relax_more.c:1833.24-33 "l1_norm[i]"]]
  readArrays : [Node[-1, 28732, par_relax_more.c:1751.27-37 "A_offd_I[i]"], Node[-1, 28535, par_relax_more.c:1708.41-53 "A_diag_I[i+1]"], Node[-1, 28761, par_relax_more.c:1757.25-36 "cf_marker[i]"], Node[-1, 28808, par_relax_more.c:1764.40-53 "A_diag_data[j]"], Node[-1, 29170, par_relax_more.c:1841.47-60 "A_offd_data[j]"], Node[-1, 28614, par_relax_more.c:1723.40-53 "A_diag_data[j]"], Node[-1, 29118, par_relax_more.c:1830.43-56 "A_diag_data[j]"], Node[-1, 29153, par_relax_more.c:1839.44-56 "A_offd_I[i+1]"], Node[-1, 28767, par_relax_more.c:1759.24-34 "A_diag_I[i]"], Node[-1, 28883, par_relax_more.c:1781.38-50 "A_diag_I[i+1]"], Node[-1, 28836, par_relax_more.c:1770.36-62 "cf_marker_offd[A_offd_J[j]]"], Node[-1, 28919, par_relax_more.c:1785.32-45 "A_offd_data[j]"], Node[-1, 28562, par_relax_more.c:1713.44-56 "A_offd_I[i+1]"], Node[-1, 28773, par_relax_more.c:1759.41-53 "A_diag_I[i+1]"], Node[-1, 29034, par_relax_more.c:1813.44-56 "A_offd_I[i+1]"], Node[-1, 29185, par_relax_more.c:1846.16-25 "l1_norm[i]"], Node[-1, 28922, par_relax_more.c:1785.49-62 "A_offd_data[j]"], Node[-1, 29064, par_relax_more.c:1821.24-34 "A_diag_I[i]"], Node[-1, 28821, par_relax_more.c:1769.27-37 "A_offd_I[i]"], Node[-1, 28572, par_relax_more.c:1714.40-53 "A_offd_data[j]"], Node[-1, 28827, par_relax_more.c:1769.44-56 "A_offd_I[i+1]"], Node[-1, 28632, par_relax_more.c:1727.44-56 "A_offd_I[i+1]"], Node[-1, 28999, par_relax_more.c:1804.43-56 "A_diag_data[j]"], Node[-1, 28719, par_relax_more.c:1746.40-53 "A_diag_data[j]"], Node[-1, 28892, par_relax_more.c:1782.29-42 "A_diag_data[j]"], Node[-1, 28597, par_relax_more.c:1721.41-53 "A_diag_I[i+1]"], Node[-1, 29012, par_relax_more.c:1807.47-60 "A_diag_data[j]"], Node[-1, 29240, par_relax_more.c:1857.18-27 "l1_norm[i]"], Node[-1, 28799, par_relax_more.c:1763.34-55 "cf_marker[A_diag_J[j]]"], Node[-1, 28545, par_relax_more.c:1709.37-50 "A_diag_data[j]"], Node[-1, 29077, par_relax_more.c:1823.23-33 "A_diag_J[j]"], Node[-1, 28649, par_relax_more.c:1729.43-56 "A_offd_data[j]"], Node[-1, 28591, par_relax_more.c:1721.24-34 "A_diag_I[i]"], Node[-1, 28738, par_relax_more.c:1751.44-56 "A_offd_I[i+1]"], Node[-1, 29131, par_relax_more.c:1833.47-60 "A_diag_data[j]"], Node[-1, 28895, par_relax_more.c:1782.46-59 "A_diag_data[j]"], Node[-1, 29216, par_relax_more.c:1853.13-36 "A_diag_data[A_diag_I[i]]"], Node[-1, 28844, par_relax_more.c:1771.43-56 "A_offd_data[j]"], Node[-1, 28904, par_relax_more.c:1784.24-34 "A_offd_I[i]"], Node[-1, 29070, par_relax_more.c:1821.41-53 "A_diag_I[i+1]"], Node[-1, 29106, par_relax_more.c:1829.36-49 "A_diag_data[j]"], Node[-1, 28606, par_relax_more.c:1722.33-54 "cf_marker[A_diag_J[j]]"], Node[-1, 28910, par_relax_more.c:1784.41-53 "A_offd_I[i+1]"], Node[-1, 28529, par_relax_more.c:1708.24-34 "A_diag_I[i]"], Node[-1, 29223, par_relax_more.c:1854.26-35 "l1_norm[i]"], Node[-1, 28780, par_relax_more.c:1761.23-33 "A_diag_J[j]"], Node[-1, 28966, par_relax_more.c:1798.23-33 "A_diag_J[j]"], Node[-1, 29058, par_relax_more.c:1819.25-36 "cf_marker[i]"], Node[-1, 28585, par_relax_more.c:1719.25-36 "cf_marker[i]"], Node[-1, 29096, par_relax_more.c:1825.34-55 "cf_marker[A_diag_J[j]]"], Node[-1, 28641, par_relax_more.c:1728.36-62 "cf_marker_offd[A_offd_J[j]]"], Node[-1, 28699, par_relax_more.c:1744.23-33 "A_diag_J[j]"], Node[-1, 28987, par_relax_more.c:1803.36-49 "A_diag_data[j]"], Node[-1, 29162, par_relax_more.c:1840.36-62 "cf_marker_offd[A_offd_J[j]]"], Node[-1, 29147, par_relax_more.c:1839.27-37 "A_offd_I[i]"], Node[-1, 28556, par_relax_more.c:1713.27-37 "A_offd_I[i]"], Node[-1, 28626, par_relax_more.c:1727.27-37 "A_offd_I[i]"], Node[-1, 28877, par_relax_more.c:1781.21-31 "A_diag_I[i]"], Node[-1, 28959, par_relax_more.c:1796.41-53 "A_diag_I[i+1]"], Node[-1, 29028, par_relax_more.c:1813.27-37 "A_offd_I[i]"], Node[-1, 28692, par_relax_more.c:1742.41-53 "A_diag_I[i+1]"], Node[-1, 28953, par_relax_more.c:1796.24-34 "A_diag_I[i]"], Node[-1, 29044, par_relax_more.c:1814.44-57 "A_offd_data[j]"], Node[-1, 28686, par_relax_more.c:1742.24-34 "A_diag_I[i]"], Node[-1, 28748, par_relax_more.c:1752.40-53 "A_offd_data[j]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2267]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 30632, par_relax_more.c:2269.7-17 "tmp_data[i]"]]
  readArrays : [Node[-1, 30635, par_relax_more.c:2269.21-29 "u_data[i]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2271]
  writeVars : []
  readVars : [Entity[kind=VARIABLE, name=num_threads, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=zero, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=n, linkage=NONE, type=0, definition=-1]]
  writeArrays : [Node[-1, 30816, par_relax_more.c:2311.15-23 "u_data[i]"]]
  readArrays : [Node[-1, 30792, par_relax_more.c:2306.43-55 "A_offd_i[i+1]"], Node[-1, 30799, par_relax_more.c:2308.23-34 "A_offd_j[jj]"], Node[-1, 30736, par_relax_more.c:2296.25-35 "A_diag_i[i]"], Node[-1, 30820, par_relax_more.c:2311.34-44 "l1_norms[i]"], Node[-1, 30786, par_relax_more.c:2306.25-35 "A_offd_i[i]"], Node[-1, 30730, par_relax_more.c:2295.21-29 "f_data[i]"], Node[-1, 30749, par_relax_more.c:2298.23-34 "A_diag_j[jj]"], Node[-1, 30724, par_relax_more.c:2293.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 30742, par_relax_more.c:2296.43-55 "A_diag_i[i+1]"]]
Found independent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2323]
  writeVars : []
  readVars : []
  writeArrays : [Node[-1, 30856, par_relax_more.c:2326.2-12 "tmp_data[i]"]]
  readArrays : [Node[-1, 30859, par_relax_more.c:2326.16-24 "u_data[i]"]]
Checking Array Refs for:
  Node[-1, 31068, par_relax_more.c:2373.15-20 "u_data"][Node[-1, 31069, par_relax_more.c:2373.22 "i"]]
  Node[-1, 31015, par_relax_more.c:2363.68-73 "u_data"][Node[-1, 31016, par_relax_more.c:2363.75-76 "ii"]]
with bounding conditions:[Node[-1, 44797, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2329], Node[-1, 30879, par_relax_more.c:2330.18-32 "j < num_threads"]]
Found dependent OpenMP for Node[-1, 0, hypre_smp_forloop.h:21.1-22.0 "pragma omp parallel for private ... \n" included from par_relax_more.c:2329]
  writeVars : [Entity[kind=VARIABLE, name=res2, linkage=NONE, type=8, definition=-1]]
  readVars : [Entity[kind=VARIABLE, name=num_threads, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=res2, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=zero, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=n, linkage=NONE, type=0, definition=-1], Entity[kind=VARIABLE, name=c2, linkage=NONE, type=8, definition=-1], Entity[kind=VARIABLE, name=c1, linkage=NONE, type=8, definition=-1]]
  writeArrays : [Node[-1, 31070, par_relax_more.c:2373.15-23 "u_data[i]"], Node[-1, 30963, par_relax_more.c:2355.15-27 "Vtemp_data[i]"]]
  readArrays : [Node[-1, 31040, par_relax_more.c:2368.25-35 "A_offd_i[i]"], Node[-1, 30972, par_relax_more.c:2356.25-35 "A_diag_i[i]"], Node[-1, 30985, par_relax_more.c:2358.23-34 "A_diag_j[jj]"], Node[-1, 31046, par_relax_more.c:2368.43-55 "A_offd_i[i+1]"], Node[-1, 30978, par_relax_more.c:2356.43-55 "A_diag_i[i+1]"], Node[-1, 30949, par_relax_more.c:2351.17-40 "A_diag_data[A_diag_i[i]]"], Node[-1, 31011, par_relax_more.c:2363.32-46 "A_diag_data[jj]"], Node[-1, 31080, par_relax_more.c:2373.49-59 "l1_norms[i]"], Node[-1, 31014, par_relax_more.c:2363.51-64 "Vtemp_data[ii]"], Node[-1, 30958, par_relax_more.c:2354.21-29 "f_data[i]"], Node[-1, 31053, par_relax_more.c:2370.23-34 "A_offd_j[jj]"], Node[-1, 31017, par_relax_more.c:2363.68-77 "u_data[ii]"], Node[-1, 30966, par_relax_more.c:2355.31-39 "u_data[i]"]]
//======================= int_div.cvl ======================
$system[civlc] void $assert(_Bool expr, ...);
//======================== civlc.cvh =======================
typedef unsigned long size_t;
$system[civlc] void $assume(_Bool expr);
$system[civlc] double $pow(double base, double exp);
//========================= stdio.h ========================
$system[stdio] int printf(char* restrict format, ...);
//======================== stdlib.h ========================
void* calloc(size_t nmemb, size_t size);
//========================= math.h =========================
double fabs(double x);
double sqrt(double x);
//======================= utilities.h ======================
typedef int hypre_MPI_Comm;
typedef int hypre_MPI_Datatype;
int hypre_OutOfMemory(int size);
char* hypre_CAlloc(int count, int elt_size);
extern int hypre__global_error;
void hypre_error_handler(char* filename, int line, int ierr);
//======================== seq_mv.h ========================
typedef struct $anon_struct_12{
  double* data;
  int* i;
  int* j;
  int num_rows;
  int num_cols;
  int num_nonzeros;
  int* rownnz;
  int num_rownnz;
  int owns_data;
  double* expand_data;
} hypre_CSRMatrix;
typedef struct $anon_struct_14{
  double* data;
  int size;
  int owns_data;
  int num_vectors;
  int multivec_storage_method;
  int vecstride;
  int idxstride;
} hypre_Vector;
//======================= parcsr_mv.h ======================
typedef struct $anon_struct_15{
  hypre_MPI_Comm comm;
  int num_sends;
  int* send_procs;
  int* send_map_starts;
  int* send_map_elmts;
  int num_recvs;
  int* recv_procs;
  int* recv_vec_starts;
  hypre_MPI_Datatype* send_mpi_types;
  hypre_MPI_Datatype* recv_mpi_types;
} hypre_ParCSRCommPkg;
typedef struct $anon_struct_17{
  int length;
  int row_start;
  int row_end;
  int storage_length;
  int* proc_list;
  int* row_start_list;
  int* row_end_list;
  int* sort_index;
} hypre_IJAssumedPart;
typedef struct $anon_struct_19{
  hypre_MPI_Comm comm;
  int global_size;
  int first_index;
  int last_index;
  int* partitioning;
  hypre_Vector* local_vector;
  int owns_data;
  int owns_partitioning;
  hypre_IJAssumedPart* assumed_partition;
} hypre_ParVector;
typedef struct $anon_struct_20{
  hypre_MPI_Comm comm;
  int global_num_rows;
  int global_num_cols;
  int first_row_index;
  int first_col_diag;
  int last_row_index;
  int last_col_diag;
  hypre_CSRMatrix* diag;
  hypre_CSRMatrix* offd;
  int* col_map_offd;
  int* row_starts;
  int* col_starts;
  hypre_ParCSRCommPkg* comm_pkg;
  hypre_ParCSRCommPkg* comm_pkgT;
  int owns_data;
  int owns_row_starts;
  int owns_col_starts;
  int num_nonzeros;
  double d_num_nonzeros;
  int* rowindices;
  double* rowvalues;
  int getrowactive;
  hypre_IJAssumedPart* assumed_partition;
} hypre_ParCSRMatrix;
int hypre_ParCSRMatrixMatvec(double alpha, hypre_ParCSRMatrix* A, hypre_ParVector* x, double beta, hypre_ParVector* y);
hypre_ParVector* hypre_ParVectorCreate(hypre_MPI_Comm comm, int global_size, int* partitioning);
int hypre_ParVectorDestroy(hypre_ParVector* vector);
int hypre_ParVectorInitialize(hypre_ParVector* vector);
int hypre_ParVectorSetPartitioningOwner(hypre_ParVector* vector, int owns_partitioning);
int hypre_ParVectorSetConstantValues(hypre_ParVector* v, double value);
int hypre_ParVectorSetRandomValues(hypre_ParVector* v, int seed);
int hypre_ParVectorCopy(hypre_ParVector* x, hypre_ParVector* y);
int hypre_ParVectorAxpy(double alpha, hypre_ParVector* x, hypre_ParVector* y);
double hypre_ParVectorInnerProd(hypre_ParVector* x, hypre_ParVector* y);
//======================= parcsr_ls.h ======================
int hypre_ParCSRMaxEigEstimateCG(hypre_ParCSRMatrix* A, int scale, int max_iter, double* max_eig, double* min_eig);
//==================== OpenMPTransformer ===================
$input int _omp_thread_max;
//========================= main.c =========================
int main() {
  hypre_ParCSRMatrix A;
  int scale = 0;
  int max_iter = 0;
  double max_eig = 0;
  double min_eig = 0;
  int r1 = hypre_ParCSRMaxEigEstimateCG(&(A), scale, max_iter, &(max_eig), &(min_eig));
}
//==================== par_relax_more.c ====================
int hypre_LINPACKcgtql1(int*, double*, double*, int*);
int hypre_ParCSRMaxEigEstimateCG(hypre_ParCSRMatrix* A, int scale, int max_iter, double* max_eig, double* min_eig) {
  int i;
  int j;
  int err;
  hypre_ParVector* p;
  hypre_ParVector* s;
  hypre_ParVector* r;
  hypre_ParVector* ds;
  hypre_ParVector* u;
  double* tridiag;
  double* trioffd;
  double lambda_max;
  double max_row_sum;
  double beta;
  double gamma = 0.0;
  double alpha;
  double sdotp;
  double gamma_old;
  double alphainv;
  double diag;
  double lambda_min;
  double* s_data;
  double* p_data;
  double* ds_data;
  double* u_data;
  int local_size = ((A)->diag)->num_rows;
  hypre_CSRMatrix* A_diag = (A)->diag;
  double* A_diag_data = (A_diag)->data;
  int* A_diag_i = (A_diag)->i;
  int size = (A)->global_num_rows;
  if (size < (int)max_iter)
    max_iter = (int)size;
  r = hypre_ParVectorCreate((A)->comm, (A)->global_num_rows, (A)->row_starts);
  hypre_ParVectorInitialize(r);
  hypre_ParVectorSetPartitioningOwner(r, 0);
  p = hypre_ParVectorCreate((A)->comm, (A)->global_num_rows, (A)->row_starts);
  hypre_ParVectorInitialize(p);
  hypre_ParVectorSetPartitioningOwner(p, 0);
  s = hypre_ParVectorCreate((A)->comm, (A)->global_num_rows, (A)->row_starts);
  hypre_ParVectorInitialize(s);
  hypre_ParVectorSetPartitioningOwner(s, 0);
  ds = hypre_ParVectorCreate((A)->comm, (A)->global_num_rows, (A)->row_starts);
  hypre_ParVectorInitialize(ds);
  hypre_ParVectorSetPartitioningOwner(ds, 0);
  u = hypre_ParVectorCreate((A)->comm, (A)->global_num_rows, (A)->row_starts);
  hypre_ParVectorInitialize(u);
  hypre_ParVectorSetPartitioningOwner(u, 0);
  s_data = ((s)->local_vector)->data;
  p_data = ((p)->local_vector)->data;
  ds_data = ((ds)->local_vector)->data;
  u_data = ((u)->local_vector)->data;
  char* $sef$1 = hypre_CAlloc((unsigned)(max_iter + 1), (unsigned)(sizeof(double)));
  tridiag = (double*)$sef$1;
  char* $sef$2 = hypre_CAlloc((unsigned)(max_iter + 1), (unsigned)(sizeof(double)));
  trioffd = (double*)$sef$2;
  for (i = 0; i < (max_iter + 1); i = i + 1) {
    tridiag[i] = 0;
    trioffd[i] = 0;
  }
  hypre_ParVectorSetRandomValues(r, 1);
  if (scale) {
    for (i = 0; i < local_size; i = i + 1) {
      diag = A_diag_data[A_diag_i[i]];
      double $sef$3 = sqrt(diag);
      ds_data[i] = 1 / $sef$3;
    }
  }
  else {
    hypre_ParVectorSetConstantValues(ds, 1.0);
  }
  gamma = hypre_ParVectorInnerProd(r, p);
  beta = 1.0;
  max_row_sum = 0.0;
  i = 0;
  while (i < max_iter) {
    hypre_ParVectorCopy(r, s);
    gamma_old = gamma;
    gamma = hypre_ParVectorInnerProd(r, s);
    if (i == 0) {
      beta = 1.0;
      hypre_ParVectorCopy(s, p);
    }
    else {
      beta = gamma / gamma_old;
      for (j = 0; j < local_size; j = j + 1) {
        p_data[j] = (s_data[j]) + (beta * (p_data[j]));
      }
    }
    if (scale) {
      for (j = 0; j < local_size; j = j + 1) {
        u_data[j] = (ds_data[j]) * (p_data[j]);
      }
      hypre_ParCSRMatrixMatvec(1.0, A, u, 0.0, s);
      for (j = 0; j < local_size; j = j + 1) {
        s_data[j] = (ds_data[j]) * (s_data[j]);
      }
    }
    else {
      hypre_ParCSRMatrixMatvec(1.0, A, p, 0.0, s);
    }
    sdotp = hypre_ParVectorInnerProd(s, p);
    alpha = gamma / sdotp;
    alphainv = 1.0 / alpha;
    tridiag[i + 1] = alphainv;
    tridiag[i] = (tridiag[i]) * beta;
    tridiag[i] = (tridiag[i]) + alphainv;
    trioffd[i + 1] = alphainv;
    double $sef$4 = sqrt(beta);
    trioffd[i] = (trioffd[i]) * $sef$4;
    hypre_ParVectorAxpy(-alpha, s, r);
    i = i + 1;
  }
  hypre_LINPACKcgtql1(&(i), tridiag, trioffd, &(err));
  lambda_max = tridiag[i - 1];
  lambda_min = tridiag[0];
  hypre_ParVectorDestroy(r);
  hypre_ParVectorDestroy(s);
  hypre_ParVectorDestroy(p);
  hypre_ParVectorDestroy(ds);
  hypre_ParVectorDestroy(u);
  *max_eig = lambda_max;
  *min_eig = lambda_min;
  return hypre__global_error;
}
double hypre_LINPACKcgpthy(double*, double*);
int hypre_LINPACKcgtql1(int* n, double* d, double* e, int* ierr) {
  int i__1;
  int i__2;
  double d__1;
  double d__2;
  double c_b10 = 1.0;
  double c;
  double f;
  double g;
  double h;
  int i;
  int j;
  int l;
  int m;
  double p;
  double r;
  double s;
  double c2;
  double c3 = 0.0;
  int l1;
  int l2;
  double s2 = 0.0;
  int ii;
  double dl1;
  double el1;
  int mml;
  double tst1;
  double tst2;
  double ds;
  e = e - 1;
  d = d - 1;
  *ierr = 0;
  if ((*n) == 1) {
    goto L1001;
  }
  i__1 = *n;
  for (i = 2; i <= i__1; i = i + 1) {
    e[i - 1] = e[i];
  }
  f = 0.;
  tst1 = 0.;
  e[*n] = 0.;
  i__1 = *n;
  for (l = 1; l <= i__1; l = l + 1) {
    j = 0;
    d__1 = d[l];
    double $sef$25 = fabs(d__1);
    d__2 = e[l];
    double $sef$26 = fabs(d__2);
    h = $sef$25 + $sef$26;
    if (tst1 < h) {
      tst1 = h;
    }
    i__2 = *n;
    for (m = l; m <= i__2; m = m + 1) {
      d__1 = e[m];
      double $sef$27 = fabs(d__1);
      tst2 = tst1 + $sef$27;
      if (tst2 == tst1) {
        goto L120;
      }
    }
    L120:
      if (m == l) {
        goto L210;
      }
    L130:
      if (j == 30) {
        goto L1000;
      }
    j = j + 1;
    l1 = l + 1;
    l2 = l1 + 1;
    g = d[l];
    p = ((d[l1]) - g) / ((e[l]) * 2.);
    r = hypre_LINPACKcgpthy(&(p), &(c_b10));
    ds = 1.0;
    if (p < 0.0)
      ds = -1.0;
    d[l] = (e[l]) / (p + (ds * r));
    d[l1] = (e[l]) * (p + (ds * r));
    dl1 = d[l1];
    h = g - (d[l]);
    if (l2 > (*n)) {
      goto L145;
    }
    i__2 = *n;
    for (i = l2; i <= i__2; i = i + 1) {
      d[i] = (d[i]) - h;
    }
    L145:
      f = f + h;
    p = d[m];
    c = 1.;
    c2 = c;
    el1 = e[l1];
    s = 0.;
    mml = m - l;
    i__2 = mml;
    for (ii = 1; ii <= i__2; ii = ii + 1) {
      c3 = c2;
      c2 = c;
      s2 = s;
      i = m - ii;
      g = c * (e[i]);
      h = c * p;
      r = hypre_LINPACKcgpthy(&(p), &(e[i]));
      e[i + 1] = s * r;
      s = (e[i]) / r;
      c = p / r;
      p = (c * (d[i])) - (s * g);
      d[i + 1] = h + (s * ((c * g) + (s * (d[i]))));
    }
    p = (((((-s) * s2) * c3) * el1) * (e[l])) / dl1;
    e[l] = s * p;
    d[l] = c * p;
    d__1 = e[l];
    double $sef$28 = fabs(d__1);
    tst2 = tst1 + $sef$28;
    if (tst2 > tst1) {
      goto L130;
    }
    L210:
      p = (d[l]) + f;
    if (l == 1) {
      goto L250;
    }
    i__2 = l;
    for (ii = 2; ii <= i__2; ii = ii + 1) {
      i = (l + 2) - ii;
      if (p >= (d[i - 1])) {
        goto L270;
      }
      d[i] = d[i - 1];
    }
    L250:
      i = 1;
    L270:
      d[i] = p;
  }
  goto L1001;
  L1000:
    *ierr = l;
  L1001:
    return 0;
}
double hypre_LINPACKcgpthy(double* a, double* b) {
  double ret_val;
  double d__1;
  double d__2;
  double d__3;
  double p;
  double r;
  double s;
  double t;
  double u;
  d__1 = fabs(*a);
  d__2 = fabs(*b);
  p = d__1 < d__2 ? d__2 : d__1;
  if (!p) {
    goto L20;
  }
  d__2 = fabs(*a);
  d__3 = fabs(*b);
  d__1 = (d__2 < d__3 ? d__2 : d__3) / p;
  r = d__1 * d__1;
  L10:
    t = r + 4.;
  if (t == 4.) {
    goto L20;
  }
  s = r / t;
  u = (s * 2.) + 1.;
  p = u * p;
  d__1 = s / u;
  r = (d__1 * d__1) * r;
  goto L10;
  L20:
    ret_val = p;
  return ret_val;
}
//===================== hypre_memory.c =====================
int hypre_OutOfMemory(int size) {
  printf("Out of memory trying to allocate %d bytes\n", size);
  hypre_error_handler(0, 0, 2);
  return 0;
}
char* hypre_CAlloc(int count, int elt_size) {
  char* ptr;
  int size = count * elt_size;
  if (size > 0) {
    ptr = calloc(count, elt_size);
    if (ptr == (void*)0) {
      hypre_OutOfMemory(size);
    }
  }
  else {
    ptr = (void*)0;
  }
  return ptr;
}
//======================== math.cvl ========================
double fabs(double x) {
  $abstract double FABS(double x);
  double result = FABS(x);
  $assume(((x >= 0) => (result == x)) && ((x < 0) => (result == (-x))));
  return result;
}
double sqrt(double x) {
  $assert(x >= 0, "Argument x should be greater than 0.");
  double $sef$75 = $pow(x, 0.5);
  return $sef$75;
}
